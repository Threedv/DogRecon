#problem 2.(a)
import numpy as np
import matplotlib.pyplot as plt
P = np.zeros((50, 50))
# 1 -> 0 
# 50 -> 49, --> i -> i-1
P[0, 0] = 1/2
P[1, 0] = 1/2
P[49, 49] = 1/2
P[48, 49] = 1/2
# 2 <= i <= 49 -> 1<=  i-1 <= 48
for i in range(1, 49):
    P[i-1, i] = 1/3
    P[i, i] = 1/3
    P[i+1, i] = 1/3

# I - P
I_minus_P = np.eye(50) - P
# Find nullspace of I - P
_,_,Vh = np.linalg.svd(I_minus_P)
null_space = Vh[-1].T
# sum(p) = 1
p = null_space/sum(null_space)
print(p)
# p = [[0.01351351]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.02027027]
#  [0.01351351]]

# p -index
p_index = np.linspace(1,50,50)
#problem 2.(b)
p_0 = np.zeros(50)
p_0[0] = 1
p_n = p_0
plt.plot(p_index,p, label='problem (a)',color='black')
for i in range(0,10001):
    p_n = P@p_n
    if i < 5 or i in [10,50,100,500,1000,2000,5000,100000]:
        plt.plot(p_index,p_n, label=f"p_{i}")
plt.xlabel('state index')
plt.ylabel('stationary probability value')
plt.legend(loc='best')
plt.show()